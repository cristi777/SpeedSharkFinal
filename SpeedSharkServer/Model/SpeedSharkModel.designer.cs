#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpeedSharkServer.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SpeedSharkDB")]
	public partial class SpeedSharkModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCargo(Cargo instance);
    partial void UpdateCargo(Cargo instance);
    partial void DeleteCargo(Cargo instance);
    partial void InsertTruck(Truck instance);
    partial void UpdateTruck(Truck instance);
    partial void DeleteTruck(Truck instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    #endregion
		
		public SpeedSharkModelDataContext() : 
				base(global::SpeedSharkServer.Properties.Settings.Default.SpeedSharkDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SpeedSharkModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpeedSharkModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpeedSharkModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpeedSharkModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cargo> Cargos
		{
			get
			{
				return this.GetTable<Cargo>();
			}
		}
		
		public System.Data.Linq.Table<Truck> Trucks
		{
			get
			{
				return this.GetTable<Truck>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cargo")]
	public partial class Cargo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cargoId;
		
		private double _weight;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Session> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncargoIdChanging(int value);
    partial void OncargoIdChanged();
    partial void OnweightChanging(double value);
    partial void OnweightChanged();
    #endregion
		
		public Cargo()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cargoId
		{
			get
			{
				return this._cargoId;
			}
			set
			{
				if ((this._cargoId != value))
				{
					this.OncargoIdChanging(value);
					this.SendPropertyChanging();
					this._cargoId = value;
					this.SendPropertyChanged("cargoId");
					this.OncargoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float NOT NULL")]
		public double weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Order", Storage="_Orders", ThisKey="cargoId", OtherKey="cargoId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Session", Storage="_Sessions", ThisKey="cargoId", OtherKey="cargoId")]
		public EntitySet<Session> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = null;
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Truck")]
	public partial class Truck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _truckId;
		
		private string _status;
		
		private EntitySet<Session> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntruckIdChanging(int value);
    partial void OntruckIdChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Truck()
		{
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_truckId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int truckId
		{
			get
			{
				return this._truckId;
			}
			set
			{
				if ((this._truckId != value))
				{
					this.OntruckIdChanging(value);
					this.SendPropertyChanging();
					this._truckId = value;
					this.SendPropertyChanged("truckId");
					this.OntruckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Truck_Session", Storage="_Sessions", ThisKey="truckId", OtherKey="truckId")]
		public EntitySet<Session> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Truck = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Truck = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CVR;
		
		private string _fName;
		
		private string _lName;
		
		private string _city;
		
		private string _address;
		
		private string _phoneNo;
		
		private string _email;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCVRChanging(string value);
    partial void OnCVRChanged();
    partial void OnfNameChanging(string value);
    partial void OnfNameChanged();
    partial void OnlNameChanging(string value);
    partial void OnlNameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneNoChanging(string value);
    partial void OnphoneNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Customer()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVR", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CVR
		{
			get
			{
				return this._CVR;
			}
			set
			{
				if ((this._CVR != value))
				{
					this.OnCVRChanging(value);
					this.SendPropertyChanging();
					this._CVR = value;
					this.SendPropertyChanged("CVR");
					this.OnCVRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this.OnfNameChanging(value);
					this.SendPropertyChanging();
					this._fName = value;
					this.SendPropertyChanged("fName");
					this.OnfNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this.OnlNameChanging(value);
					this.SendPropertyChanging();
					this._lName = value;
					this.SendPropertyChanged("lName");
					this.OnlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="NVarChar(50)")]
		public string phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="CVR", OtherKey="custCVR")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fName;
		
		private string _lName;
		
		private string _username;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfNameChanging(string value);
    partial void OnfNameChanged();
    partial void OnlNameChanging(string value);
    partial void OnlNameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this.OnfNameChanging(value);
					this.SendPropertyChanging();
					this._fName = value;
					this.SendPropertyChanged("fName");
					this.OnfNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this.OnlNameChanging(value);
					this.SendPropertyChanging();
					this._lName = value;
					this.SendPropertyChanged("lName");
					this.OnlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderId;
		
		private string _orderNo;
		
		private string _custCVR;
		
		private double _price;
		
		private int _sessionId;
		
		private int _cargoId;
		
		private string _status;
		
		private EntityRef<Cargo> _Cargo;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Session> _Session;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderIdChanging(int value);
    partial void OnorderIdChanged();
    partial void OnorderNoChanging(string value);
    partial void OnorderNoChanged();
    partial void OncustCVRChanging(string value);
    partial void OncustCVRChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnsessionIdChanging(int value);
    partial void OnsessionIdChanged();
    partial void OncargoIdChanging(int value);
    partial void OncargoIdChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Order()
		{
			this._Cargo = default(EntityRef<Cargo>);
			this._Customer = default(EntityRef<Customer>);
			this._Session = default(EntityRef<Session>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string orderNo
		{
			get
			{
				return this._orderNo;
			}
			set
			{
				if ((this._orderNo != value))
				{
					this.OnorderNoChanging(value);
					this.SendPropertyChanging();
					this._orderNo = value;
					this.SendPropertyChanged("orderNo");
					this.OnorderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custCVR", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string custCVR
		{
			get
			{
				return this._custCVR;
			}
			set
			{
				if ((this._custCVR != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustCVRChanging(value);
					this.SendPropertyChanging();
					this._custCVR = value;
					this.SendPropertyChanged("custCVR");
					this.OncustCVRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", DbType="Int NOT NULL")]
		public int sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsessionIdChanging(value);
					this.SendPropertyChanging();
					this._sessionId = value;
					this.SendPropertyChanged("sessionId");
					this.OnsessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargoId", DbType="Int NOT NULL")]
		public int cargoId
		{
			get
			{
				return this._cargoId;
			}
			set
			{
				if ((this._cargoId != value))
				{
					if (this._Cargo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncargoIdChanging(value);
					this.SendPropertyChanging();
					this._cargoId = value;
					this.SendPropertyChanged("cargoId");
					this.OncargoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Order", Storage="_Cargo", ThisKey="cargoId", OtherKey="cargoId", IsForeignKey=true)]
		public Cargo Cargo
		{
			get
			{
				return this._Cargo.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo.Entity;
				if (((previousValue != value) 
							|| (this._Cargo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Cargo.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._cargoId = value.cargoId;
					}
					else
					{
						this._cargoId = default(int);
					}
					this.SendPropertyChanged("Cargo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="custCVR", OtherKey="CVR", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._custCVR = value.CVR;
					}
					else
					{
						this._custCVR = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_Order", Storage="_Session", ThisKey="sessionId", OtherKey="sessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._sessionId = value.sessionId;
					}
					else
					{
						this._sessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sessionId;
		
		private int _cargoId;
		
		private System.DateTime _departureTime;
		
		private System.DateTime _arrivalTime;
		
		private int _truckId;
		
		private string _destCity;
		
		private string _destAddress;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Cargo> _Cargo;
		
		private EntityRef<Truck> _Truck;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsessionIdChanging(int value);
    partial void OnsessionIdChanged();
    partial void OncargoIdChanging(int value);
    partial void OncargoIdChanged();
    partial void OndepartureTimeChanging(System.DateTime value);
    partial void OndepartureTimeChanged();
    partial void OnarrivalTimeChanging(System.DateTime value);
    partial void OnarrivalTimeChanged();
    partial void OntruckIdChanging(int value);
    partial void OntruckIdChanged();
    partial void OndestCityChanging(string value);
    partial void OndestCityChanged();
    partial void OndestAddressChanging(string value);
    partial void OndestAddressChanged();
    #endregion
		
		public Session()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Cargo = default(EntityRef<Cargo>);
			this._Truck = default(EntityRef<Truck>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					this.OnsessionIdChanging(value);
					this.SendPropertyChanging();
					this._sessionId = value;
					this.SendPropertyChanged("sessionId");
					this.OnsessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargoId", DbType="Int NOT NULL")]
		public int cargoId
		{
			get
			{
				return this._cargoId;
			}
			set
			{
				if ((this._cargoId != value))
				{
					if (this._Cargo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncargoIdChanging(value);
					this.SendPropertyChanging();
					this._cargoId = value;
					this.SendPropertyChanged("cargoId");
					this.OncargoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departureTime", DbType="DateTime NOT NULL")]
		public System.DateTime departureTime
		{
			get
			{
				return this._departureTime;
			}
			set
			{
				if ((this._departureTime != value))
				{
					this.OndepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._departureTime = value;
					this.SendPropertyChanged("departureTime");
					this.OndepartureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrivalTime", DbType="DateTime NOT NULL")]
		public System.DateTime arrivalTime
		{
			get
			{
				return this._arrivalTime;
			}
			set
			{
				if ((this._arrivalTime != value))
				{
					this.OnarrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._arrivalTime = value;
					this.SendPropertyChanged("arrivalTime");
					this.OnarrivalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_truckId", DbType="Int NOT NULL")]
		public int truckId
		{
			get
			{
				return this._truckId;
			}
			set
			{
				if ((this._truckId != value))
				{
					if (this._Truck.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntruckIdChanging(value);
					this.SendPropertyChanging();
					this._truckId = value;
					this.SendPropertyChanged("truckId");
					this.OntruckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destCity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string destCity
		{
			get
			{
				return this._destCity;
			}
			set
			{
				if ((this._destCity != value))
				{
					this.OndestCityChanging(value);
					this.SendPropertyChanging();
					this._destCity = value;
					this.SendPropertyChanged("destCity");
					this.OndestCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string destAddress
		{
			get
			{
				return this._destAddress;
			}
			set
			{
				if ((this._destAddress != value))
				{
					this.OndestAddressChanging(value);
					this.SendPropertyChanging();
					this._destAddress = value;
					this.SendPropertyChanged("destAddress");
					this.OndestAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_Order", Storage="_Orders", ThisKey="sessionId", OtherKey="sessionId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Session", Storage="_Cargo", ThisKey="cargoId", OtherKey="cargoId", IsForeignKey=true)]
		public Cargo Cargo
		{
			get
			{
				return this._Cargo.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo.Entity;
				if (((previousValue != value) 
							|| (this._Cargo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Cargo.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._cargoId = value.cargoId;
					}
					else
					{
						this._cargoId = default(int);
					}
					this.SendPropertyChanged("Cargo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Truck_Session", Storage="_Truck", ThisKey="truckId", OtherKey="truckId", IsForeignKey=true)]
		public Truck Truck
		{
			get
			{
				return this._Truck.Entity;
			}
			set
			{
				Truck previousValue = this._Truck.Entity;
				if (((previousValue != value) 
							|| (this._Truck.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Truck.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Truck.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._truckId = value.truckId;
					}
					else
					{
						this._truckId = default(int);
					}
					this.SendPropertyChanged("Truck");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
	}
}
#pragma warning restore 1591
